<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!--组件扫描器-->
    <context:component-scan base-package="com.liujiajun.shiro" />

    <bean id="hasroles" class="com.liujiajun.shiro.CustomRolesAuthorizationFilter"></bean>


        <!-- shiro过滤器bean，id要和web.xml中filter-name一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager" />

        <!-- 要求登录时的链接(登录页面地址)，非必须的属性，默认会自动寻找Web工程根目录下的"/login.jsp"页面 -->
        <!--<property name="loginUrl" value="/pages/consumer/index.jsp"></property>-->

        <property name="filters">
            <map>
                <entry key="roles" value-ref="hasroles" />
            </map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                <!--需要注意filterChainDefinitions过滤器中对于路径的配置是有顺序的，当找到匹配的条目之后容器不会再继续寻找。因此带有通配符的路径要放在后面-->

                <!--/index.do = anon-->
                <!--/consumer/allbook.do = anon-->
                <!--/index2.jsp = anon-->


                <!--注册时，查找当前用户名是否存在-->
                /user/findByName.do = anon


                <!-- 如果用户没有该角色，然后访问该 路径 会报 401错误-->
                /category/** = authc, roles[admin]
                /user/** = authc, roles[admin]
                /role/** = authc, roles[user]
                /book/save.do = authc,roles["admin","user"]
                /book/soldOut.do = authc,roles["admin","user"]
                /book/update.do = authc,roles["admin","user"]

                /book/** = authc, roles[admin]
                /askbook/update.do = authc, roles["admin","user"]
                /askbook/cancel.do = authc, roles["admin","user"]
                /askbook/save.do = authc, roles["admin","user"]
                /askbook/** = authc, roles[admin]
                /findNewBook.do = authc, roles[user]


                <!--/consumer/** = authc, roles[user]-->
                <!--/consumer/addbook.do = roles[user]-->
                <!--/consumer/addaskbook.do = roles[user]-->
                /consumer/mysell.do = roles[user]
                /consumer/myask.do = roles[user]
                /consumer/myCollection.do = roles[user]
                /consumer/opinion.do = roles[user]
                /consumer/updatePersonalData.do = roles[user]
                /consumer/updatePwd.do = roles[user]


                /collection/delete.do = authc,roles["user"]
                /collection/save.do = authc,roles["user"]
                /collection/search.do = authc,roles["user"]
                /collection/** = authc,roles["admin"]



                <!-- 当访问login（LoginController中的登录处理方法）时，不用进行认证（anon表示匿名）-->
                /login.do = anon
                <!--注册-->
                /register.do = anon

                <!--退出登录-->
                /logout = logout

                <!-- 配置静态资源可以匿名访问-->
                /css/** = anon
                /js/** = anon
                /img/** = anon
                /libs/** = anon
                /plugins/** = anon
                /fonts/** = anon

                <!-- 除了上面的 /login 可以匿名访问，其他路径都需要登录访问-->



                <!-- 如果没登录，就访问其他路径会跳转到 /login 登录-->
                <!--/** = authc-->

                /** = anon
            </value>
        </property>
    </bean>

    <!-- 配置securityManager -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!--配置自定义Realm-->
        <!--loginRealm 使用扫描器扫描注册成功了-->
        <property name="realm" ref="loginRealm" />
        <!-- <property name="sessionMode" value="native"/> -->
    </bean>

    <!-- 生命周期 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


    <!-- 启用shiro注解 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>


</beans>